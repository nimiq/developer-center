---
description: 
globs: 
alwaysApply: false
---
# Personas for Developer Center

This rule defines four distinct personas representing key audience segments of the Nimiq Developer Center. When thinking about documentation structure, examples, API design, and error messaging, consider how each persona would react and which questions they would ask. Use their motivations to "challenge" current assumptions and to discover clearer solutions.

> **Related Rules**: These personas guide [documentation authoring](mdc:.cursor/rules/documentation-authoring.mdc) structure and [copywriting style](mdc:.cursor/rules/copywriting-style.mdc) decisions. For technical implementation, see [Nimiq theme](mdc:.cursor/rules/nimiq-vitepress-theme.mdc#modules-system) modules system.

---

## 1. Web-Client App Developer

* **Description:** Front-end focused engineers who want to embed Nimiq in existing web or mobile-web apps. They do not run their own node and rely on browser-only libraries.

* **Primary Resources:** [web-client/getting-started.md](mdc:web-client/getting-started.md) and the Web-Client reference.

* **Typical Goals**
  - Display an address balance.
  - Send a simple transaction.
  - Handle user wallets in a privacy-respecting way.

* **Challenge prompts**
  - "Can I copy-paste a minimal example and have it work within 5 minutes?"
  - "Where do I see the full list of high-level helpers without digging into protocol jargon?"
  - "What security foot-guns exist when everything runs in the browser?"

---

## 2. RPC App Developer

* **Description:** Full-stack developers comfortable with backend work. They build centralized services (e.g. exchanges, dashboards) and interact with a full Nimiq nodeâ€”either self-hosted or the public `nimiqwatch` endpoint.

* **Primary Resources:** [rpc-client/index.md](mdc:rpc-client/index.md) and the OpenRPC method list.

* **Typical Goals**
  - Execute batch RPC calls reliably.
  - Parse complex data (validators list, mempool, receipts).
  - Monitor node health and fall back if the public endpoint is down.

* **Challenge prompts**
  - "How do I authenticate or rate-limit access when using the public proxy?"
  - "Is there an example of paginating through thousands of transactions efficiently?"
  - "Where are the error codes documented and mapped to HTTP responses?"

---

## 3. Validator Operator

* **Description:** Seasoned users who operate (or plan to operate) a validator. Overlaps with RPC developers but with a stronger focus on performance, observability, and security of consensus participation.

* **Primary Resources:** [validators/index.md](mdc:validators/index.md), staking handbook, and protocol deep-dives on validators.

* **Typical Goals**
  - Spin up and secure a validator on main-net.
  - Configure alerts for slashing-related events.
  - Optimize block proposal success rate and rewards.

* **Challenge prompts**
  - "Is there a one-pager with all required ports, firewall, and system requirements?"
  - "How do I benchmark my validator against network-wide averages?"
  - "What are the recommended upgrade paths when protocol versions change?"

---

## 4. Researcher

* **Description:** A small but vocal group interested in the inner workings of the Albatross protocol and cutting-edge cryptography behind Nimiq.

* **Primary Resources:** [protocol/protocol/overview.md](mdc:protocol/protocol/overview.md) and linked whitepapers.

* **Typical Goals**
  - Understand the consensus algorithm and security proofs.
  - Reproduce experimental results or simulations.
  - Evaluate design trade-offs versus other PoS blockchains.

* **Challenge prompts**
  - "Can I find precise formulas for validator selection probability?"
  - "Where are the cryptographic assumptions laid out explicitly?"
  - "Is the research repository reproducible using modern tooling?"

---

## How to Use These Personas

> **For implementation guidance**: See [documentation authoring](mdc:.cursor/rules/documentation-authoring.mdc) for structure and [copywriting style](mdc:.cursor/rules/copywriting-style.mdc) for voice.

When adding docs, code examples, or tooling:

1. **Pick at least one persona** and read their _challenge prompts_.
2. **Verify the current solution** would satisfy their question within minutes, not hours.
3. **If not, create the missing** snippet, explanation, or quick-start guide.
4. **Structure content** using the [modules system](mdc:.cursor/rules/nimiq-vitepress-theme.mdc#modules-system) for optimal persona navigation.
5. **Apply appropriate tone** following [copywriting guidelines](mdc:.cursor/rules/copywriting-style.mdc) for each audience.
