---
description: 
globs: 
alwaysApply: false
---
# Documentation Authoring Guidelines for Nimiq Developer Center

This rule provides a framework for writing and maintaining high-quality documentation within the Nimiq Developer Center. It complements the existing [personas](mdc:.cursor/rules/personas.mdc) rule by offering concrete guidance on structure, tone, and content patterns that satisfy each audience segment.

> **Related Rules**: This rule works with [copywriting style](mdc:.cursor/rules/copywriting-style.mdc) for writing conventions, [personas](mdc:.cursor/rules/personas.mdc) for audience understanding, and the [Nimiq theme](mdc:.cursor/rules/nimiq-vitepress-theme.mdc) for implementation patterns.

---

## 1. Audience-First Mindset
1. **Identify Your Primary Persona** – Before writing, choose at least one [persona](mdc:.cursor/rules/personas.mdc) and read their _challenge prompts_.
2. **Success in Minutes, Not Hours** – Aim for readers to achieve a tangible result within 5 minutes of landing on the doc (a balance read, first RPC call, etc.).
3. **Progressive Disclosure** – Start with the simplest path; link to advanced or background material instead of overwhelming the flow.

## 2. Recommended Document Types
| Doc Type            | When to Use                                                           | Key Sections (in order)                                   |
|---------------------|------------------------------------------------------------------------|-----------------------------------------------------------|
| **Quick-Start**     | First-time setup or "Hello World" tasks                                | 1. Goal (one sentence) 2. Prerequisites 3. Step-by-step 4. Next Steps |
| **How-To Guide**    | Solving a specific problem ("Batch RPC Calls")                         | 1. Goal 2. Context Diagram 3. Detailed Steps 4. Common Pitfalls |
| **Concept Explainer** | Introduce a protocol concept or design trade-off                     | 1. Why It Matters 2. Visual Model 3. Key Takeaways 4. Links for Deep Dive |
| **Reference**       | Exhaustive API/method/flag listings                                    | 1. Synopsis 2. Parameter Table 3. Response Schema 4. Error Codes |

## 3. Style & Tone
> **For detailed writing conventions**: See [copywriting style guide](mdc:.cursor/rules/copywriting-style.mdc)

- **Friendly • Precise • Actionable** – Avoid marketing superlatives; prefer crisp technical verbs.
- Use *you* to address the reader and *we* sparingly for collaborative steps.
- Prefer **present tense** and **active voice**.
- Explain *why* before *how* when introducing non-obvious decisions.

## 4. Technical Implementation
> **For component and styling patterns**: See [Nimiq VitePress theme](mdc:.cursor/rules/nimiq-vitepress-theme.mdc)

### Code & CLI Snippets
1. Provide a fully copy-pasteable example that runs unmodified.
2. Show the minimal happy-path first; edge-case handling can follow.
3. Use monospace backticks for inline code and triple-backtick blocks for multi-line snippets with language tags (`bash`, `ts`, `json`, etc.).
4. Annotate snippets sparsely—only when necessary to explain intent.

### Page Structure
- Use `NqGrid` component for card layouts
- Follow [fluid spacing](mdc:.cursor/rules/fluid-spacing.mdc) patterns for responsive design
- Use proper [icon selection](mdc:.cursor/rules/icons-usage.mdc) for visual hierarchy

## 5. Visual Aids
- Prefer simple ASCII diagrams for quick understanding; embed SVG/PNG only if clarity demands.
- Caption every figure with "**Figure X –** ..." and reference in text.

## 6. Cross-Linking & Navigation
- Link to related guides *at the moment* the reader may need them.
- Use clear anchor text (e.g., "validator slashing guide" instead of "click here").
- Maintain a **Next Steps** section at the end directing to progressive learning paths.
- Structure content within the [modules system](mdc:.cursor/rules/nimiq-vitepress-theme.mdc#modules-system) for optimal navigation.

## 7. Error-Driven Guidance
Whenever possible, pair error codes/messages with:
- Cause explanation (1 sentence)
- One-line fix or diagnostic step

## 8. Review Checklist
Before publishing, ensure:
- [ ] Goal achievable in < 5 min for the target [persona](mdc:.cursor/rules/personas.mdc).
- [ ] At least one code snippet tested against latest SDK/endpoint.
- [ ] Links verified and use HTTPS.
- [ ] Terminology matches [copywriting style guide](mdc:.cursor/rules/copywriting-style.mdc).
- [ ] Document placed in correct folder and follows [theme patterns](mdc:.cursor/rules/nimiq-vitepress-theme.mdc).
- [ ] Uses proper [styling conventions](mdc:.cursor/rules/unocss-usage.mdc) for responsive design.

---

By following this rule alongside the personas, authors will produce concise, actionable, and persona-aligned documentation that accelerates developer success in the Nimiq ecosystem.
